package tegenton.card.parse.token.lexicon;

public enum KeywordAbility implements Word {
    deathtouch,
    defender,
    doubleStrike("double strike"),
    enchant,
    equip,
    firstStrike("first strike"),
    flash,
    flying,
    haste,
    hexproof,
    indestructible,
    intimidate,
    landwalk,
    lifelink,
    protection,
    reach,
    shroud,
    trample,
    vigilance,
    ward,
    banding,
    rampage,
    cumulativeUpkeep("cumulative upkeep"),
    flanking,
    phasing,
    buyback,
    shadow,
    cycling,
    echo,
    horsemanship,
    fading,
    kicker,
    flashback,
    madness,
    fear,
    morph,
    amplify,
    provoke,
    storm,
    affinity,
    entwine,
    modular,
    sunburst,
    bushido,
    soulshift,
    splice,
    offering,
    ninjutsu,
    epic,
    convoke,
    dredge,
    transmute,
    bloodthirst,
    haunt,
    replicate,
    forecast,
    graft,
    recover,
    ripple,
    splitSecond("split second"),
    suspend,
    vanishing,
    absorb,
    auraSwap("aura swap"),
    delve,
    fortify,
    frenzy,
    gravestorm,
    poisonous,
    transifigure,
    champion,
    changeling,
    evoke,
    hideaway,
    prowl,
    reinforce,
    conspire,
    persist,
    wither,
    retrace,
    devour,
    exalted,
    unearth,
    cascade,
    annihilator,
    levelUp("level up"),
    rebound,
    totemArmor("totem armor"),
    infect,
    battleCry("battle cry"),
    livingWeapon("living weapon"),
    undying,
    miracle,
    soulbond,
    overload,
    scavenge,
    unleash,
    cipher,
    evolve,
    extort,
    fuse,
    bestow,
    tribute,
    dethrone,
    hiddenAgenda("hidden agenda"),
    outlast,
    prowess,
    dash,
    exploit,
    menace,
    renown,
    awaken,
    devoid,
    ingest,
    myriad,
    surge,
    skulk,
    emerge,
    escalate,
    melee,
    crew,
    fabricate,
    partner,
    undaunted,
    improvise,
    aftermath,
    embalm,
    eternalize,
    afflict,
    ascend,
    assist,
    jumpStart("jump-start"),
    mentor,
    afterlife,
    riot,
    spectacle,
    escape,
    companion,
    mutate,
    encore,
    boast,
    foretell,
    demonstrate,
    daybound,
    nightbound,
    disturb,
    decayed;

    private final String name;

    KeywordAbility(String s) {
        name = s;
    }

    KeywordAbility() {
        name = name();
    }

    public static KeywordAbility fromString(String s) {
        for (KeywordAbility type : KeywordAbility.values()) {
            if (type.getWord().equalsIgnoreCase(s)) {
                return type;
            }
        }
        return null;
    }

    @Override
    public String getWord() {
        return name;
    }
}
